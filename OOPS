Experiment 1:- Implement a C++ Program to demonstrate the concepts of Class, Object and 
Constructors by creating a class that holds the basic information of students belonging to an 
Engineering College.  
Program:- 
#include <iostream> 
#include <string> 
using namespace std; 
class Student { 
string name; 
string usn; 
string branch; 
float cgpa; 
public: 

Student(string sname, string susn, string sbranch, float scgpa) { 
name = sname; 
usn=susn; 
branch=sbranch; 
cgpa=scgpa; 
} 
// Function to display student details 
void display ( ) { 
cout << "NAME: " << name << endl; 
cout << "USN: " << usn << endl; 
cout << "BRANCH: " << branch << endl; 
cout << "CGPA: " << cgpa<< endl; 
} 
}; 
int main( ) { 

Department of ISE & CSE (Data Science) 
Student s1 ("Anuj", "4SF21CI001", "CSE-AIML", 9.5); 
Student s2 ("Akshay", "4SF21AD002", " AI&DS", 9.0); 
Student s3 ("Avish", "4SF21CS003", " CSE", 8.6); 
Student s4 ("Manushree", "4SF21IS002", " ISE", 9.0); 
// Displaying student information using objects 
cout << "Student 1 Details: " << endl; 
s1.display ( ); 
cout << "\nStudent 2 Details: " << endl; 
s2.display( ); 
cout << "\nStudent 3 Details: " << endl; 
s3.display( ); 
cout << "\nStudent 4 Details: " << endl; 
s4.display( ); 
return 0;




Experiment 2:- Develop a C++ Program to simulate a calculator that performs basic arithmetic 
operations on integer and floating point numbers using the concepts of function overloading. 
Program:- 
#include <iostream> 
using namespace std; 
class Calculator { 
public: 
// Function to add two integers 
int calculate(int num1, int num2) { 
return num1 + num2; 
} 
// Function to subtract two integers 
int calculate(int num1, int num2, char operation) { 
if (operation == '-') { 
return num1 - num2; 
} else { 
cout << "Invalid operation for integers!" << endl; 
return 0; 
} 
} 
// Function to multiply two integers 
int calculate(int num1, int num2, int num3) { 
return num1 * num2 * num3; 
} 
// Function to divide two floating-point numbers 
float calculate(float num1, float num2) { 
if (num2 != 0) { 
return num1 / num2; 
} else { 
cout << "Cannot divide by zero!" << endl; 
return 0.0f; 
} 
} 
}; 


int main() { 
Calculator calc; 
// Operations with integers 
cout << "Integer calculations:" << endl; 
cout << "Addition: " << calc.calculate(5, 3) << endl; 
cout << "Subtraction: " << calc.calculate(8, 4, '-') << endl; 
cout << "Multiplication: " << calc.calculate(2, 3, 4) << endl; 
// Operations with floating-point numbers 
cout << "\nFloating-point calculations:" << endl; 
cout << "Division: " << calc.calculate(10.5f, 2.0f) << endl; 
return 0; 
}



//Program 3:- 
package javaapplication7; 
import java.util.Scanner; 
public class Finance  
{ 
double initial_deposit; 
double maturity_period; 
Department of ISE & CSE (Data Science) 
double annual_percentage_yeild; 
void read(Double id, Double mp, Double apy) 
{ 
initial_deposit= id; 
maturity_period= mp; 
annual_percentage_yeild= apy; 
} 
void calculate_CD() 
{ 
System.out.println("Months 
          CD Value"); 
for(int i=1;i<= maturity_period;i++) 
{     
} 
} 
void display() 
{ 
double CD= initial_deposit+ i*( annual_percentage_yeild/12*100); 
System.out.println(i+" 
             "
 +CD); 
System.out.println("The Initial Deposit Amount:"+initial_deposit); 
System.out.println("The Maturity Period in months:"+maturity_period); 
System.out.println("The Annual Percentage Yield:"+annual_percentage_yeild);  
} 
} 
Object Oriented Programming Concepts, (CS322I3C) 
Page 7 
Department of ISE & CSE (Data Science) 
class Demo 
{ 
} 
public static void main(String args[]) 
{ 
} 
Output:- 
Double id,mp,apy; 
Finance F=new Finance(); 
System.out.println("Enter the initial deposit, maturity period and annual 
percentage yield"); 
Scanner sc= new Scanner(System.in); 
id=sc.nextDouble(); 
mp=sc.nextDouble(); 
apy=sc.nextDouble(); 
F.read(id,mp,apy); 
F.display(); 
F.calculate_CD();  
System.out.println(""); 
Enter the initial deposits, maturity period and annual percentage yeild
